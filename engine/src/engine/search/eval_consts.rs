pub const MATERIAL_WEIGHTS_EARLY: [i16; 12] = [100, 320, 360, 520, 1000, 0, -100, -320, -360, -520, -1000, 0];
pub const MATERIAL_WEIGHTS_LATE: [i16; 12] = [100, 320, 360, 520, 1000, 0, -100, -320, -360, -520, -1000, 0];

pub const STACKED_PAWN_PENALTY: i16 = 10;
pub const ISOLATED_PAWN_PENALTY: i16 = 10;
pub const PASSED_PAWN_BONUS: [i16; 8] = [ 0, 10, 30, 50, 75, 100, 150, 200 ];

pub const SEMI_OPEN_FILE_BONUS: i16 = 10;
pub const OPEN_FILE_BONUS: i16 = 15;

pub const PROTECTED_KING_BONUS_EARLY: i16 = 5;
pub const KNIGHT_MOBILITY_BONUS_EARLY: i16 = 1;
pub const BISHOP_MOBILITY_BONUS_EARLY: i16 = 1;
pub const ROOK_MOBILITY_BONUS_EARLY: i16 = 1;
pub const QUEEN_MOBILITY_BONUS_EARLY: i16 = 1;

pub const PROTECTED_KING_BONUS_LATE: i16 = 5;
pub const KNIGHT_MOBILITY_BONUS_LATE: i16 = 1;
pub const BISHOP_MOBILITY_BONUS_LATE: i16 = 1;
pub const ROOK_MOBILITY_BONUS_LATE: i16 = 1;
pub const QUEEN_MOBILITY_BONUS_LATE: i16 = 1;

// PIECE SQUARE TABLES

/// Pawn positional score
pub const PAWN_SCORES_EARLY: [i16; 64] = 
[
      0,   0,   0,   0,   0,   0,  0,   0,
     75, 100, 100, 100, 100, 100, 75, -10,
     -5,  10,  30,  30,  60,  50, 30, -20,
    -10,  10,   5,  20,  25,  10, 10, -25,
    -25,   0,   0,  10,  15,   5, 10, -25,
    -25,  -5,  -5, -10,   5,   5, 30, -10,
    -35,   0, -20, -25, -15,  25, 40,  20,
      0,   0,   0,   0,   0,   0,  0,   0,
];
pub const PAWN_SCORES_LATE: [i16; 64] = 
[
      0,   0,   0,   0,   0,   0,   0,   0,
    150, 150, 150, 150, 150, 150, 150, 150,
    100, 100,  75,  60,  60,  50,  75,  85,
     30,  25,  15,   5,   0,   5,  20,  20,
     15,  10,  -5, -10, -10, -10,   5,   0,
      5,  10,  -5,   0,  -5,   0,   0, -10,
     15,  10,  10,  15,   0,   0,   0, -10,
      0,   0,   0,   0,   0,   0,   0,   0,
];

/// Knight positional score
pub const KNIGHT_SCORES_EARLY: [i16; 64] = 
[
    -175, -80, -35, -50,  60, -100, -15, -100,
     -75, -40,  75,  40,  25,   60,  10,  -20,
    -50,   60,  40,  65,  80,  100,  75,   40,
    -10,   20,  20,  50,  35,   60,  20,   25,
    -15,   5,   15,  15,  30,   20,  20,  -10,
    -25,  -10,  10,  10,  20,   20,  25,  -15,
    -30,  -50, -10,   0,   0,   20, -15,  -20,
    -100, -20, -60, -35, -20,  -30, -20,  -25,
];
pub const KNIGHT_SCORES_LATE: [i16; 64] = 
[
    -60, -40, -15, -30, -30, -25, -60, -100,
    -25, -10, -25,  0,  -10, -25, -25,  -50,
    -25, -20,  10,  10,   0,  10, -20,  -50,
    -20,   5,  20,  20,  20,  10,  10,  -20,
    -20,  -5,  15,  25,  15,  20,   5,  -20,
    -25,  -5,   0,  15,  10,  -5, -20,  -20,
    -40, -20, -10,  -5,   0, -20, -25,  -45,
    -30, -50, -25, -15, -20, -20, -50,  -65,
];

/// Bishop positional score
pub const BISHOP_SCORES_EARLY: [i16; 64] = 
[
    -30,   5, -80, -40, -25, -40,  10, -10,
    -25,  15, -20, -15,  30,  60,  20, -50,
    -15,  40,  45,  40,  35,  50,  40,   0,
     -5,   5,  20,  50,  40,  40,  10,   0,
     -5,  15,  15,  25,  35,  15,  10,   5,
      0,  15,  15,  15,  15,  25,  15,  10,
      5,  15,  15,   0,  10,  20,  35,   0,
    -35,  -5, -15, -20, -15, -10, -40, -20,
];
pub const BISHOP_SCORES_LATE: [i16; 64] = 
[
    -15, -20, -10, -10, -10, -10, -15, -25,
    -10,  -5,  75, -10,  -5, -15,  -5, -15,
      0, -10,   0,   0,   0,   5,   0,   5,
     -5,  10,  10,  10,  15,  10,   5,   0,
     -5,   5,  15,  20,  10,  10,  -5, -10,
    -10,  -0,  10,  10,  15,   5,  -5, -15,
    -15, -20, -10,   0,   5, -10, -15, -30,
    -25, -10, -25,  -5, -10, -15,  -5, -20,
];

/// Rook positional score
pub const ROOK_SCORES_EARLY: [i16; 64] = 
[
     30,  40,  30,  50, 65, 10,  30,  45,
     30,  30,  60,  60, 80, 64,  24,  44,
     -5,  20,  25,  35, 15, 45,  60,  15,
    -25, -10,   5,  25, 25, 35, -10, -20,
    -35, -25, -10,   0, 10, -5,   5, -25,
    -45, -25, -15, -15,  5,  0,  -5, -35,
    -45, -15, -20, -10,  0, 10,  -5, -10,
    -20, -15,   0,  15,  5,  5, -40, -25,
];
pub const ROOK_SCORES_LATE: [i16; 64] = 
[
     15, 10, 20, 15,  10,  10,  10,   5,
     10, 15, 15, 10,  -5,   5,  20,   5,
     10, 10, 10,  5,   5,  -5,  -5,  -5,
      5,  5, 15,  0,   0,   0,   0,   0,
      5,  5, 10,  5,  -5,  -5, -10, -10,
     -5,  0, -5,  0, -10, -10, -10, -15,
     -5, -5,  0,  0, -10, -10, -10,  -5,
    -10,  0,  0,  0,  -5, -15,   5, -20,
];

// Queen positional score
pub const QUEEN_SCORES_EARLY: [i16; 64] = 
[
    -30,   0,  30,  10,  60,  45,  45,  45,
    -25, -40,  -5,   0, -15,  60,  30,  55,
    -20, -20,  10,  10,  30,  55,  50,  55,
    -30, -30, -15, -15,   0,  15,   0,   0,
    -10, -25, -10, -10,   0,  -5,   5,  -5,
    -15,   0, -10,   0,  -5,   0,  15,   5,
    -35, -10,  10,   0,  10,  15,  -5,   0,
      0, -20, -10,  10, -15, -25, -30, -50,
];
pub const QUEEN_SCORES_LATE: [i16; 64] = 
[
    -10,  20,  20,  30,  30,  20,  10,  20,
    -20,  20,  30,  40,  60,  25,  30,   0,
    -20,   5,  10,  50,  50,  35,  20,  10,
      5,  20,  25,  45,  60,  40,  60,  35,
    -20,  30,  20,  50,  30,  35,  40,  25,
    -15, -30,  15,   5,  10,  15,  10,   5,
    -20, -25, -30, -15, -15, -25, -35, -30,
    -35, -30, -20, -45,  -5, -30, -20, -40,
];

/// King positional score
pub const KING_SCORES_EARLY: [i16; 64] = 
[
    -65,  25,  15, -15, -65, -35,   0,  15,
     30,   0, -20,  -5, -10,  -5, -40, -30,
    -10,  25,   0, -15, -20,   5,  20, -20,
    -20, -20, -10, -30, -30, -25, -15, -40,
    -50,   0, -30, -40, -45, -45, -35, -50,
    -15, -15, -20, -45, -45, -30, -15, -20,
      0,   5, -10, -65, -45, -15,  10,  10,
    -15,  35,  10, -55,  10, -30,  25,  15,
];
pub const KING_SCORES_LATE: [i16; 64] = 
[
    -75, -35, -20, -20, -10,  15,   5, -20,
    -10,  15,  15,  15,  15,  40,  15,  10,
     10,  15,  25,  15,  20,  45,  45,  15,
    -10,  20,  25,  25,  25,  35,  25,   5,
    -20,  -5,  20,  25,  25,  25,  10, -10,
    -20,  -5,  10,  20,  25,  15,  10, -10,
    -30, -10,   5,  15,  15,   5,  -5, -15,
    -55, -35, -20, -10, -30, -15, -25, -45
];